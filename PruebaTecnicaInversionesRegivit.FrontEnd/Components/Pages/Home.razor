@page "/"
@using PruebaTecnicaInversionesRegivit.FrontEnd.Services
@using PruebaTecnicaInversionesRegivit.Shared.DTOs.Account
@using PruebaTecnicaInversionesRegivit.Shared.Models

<PageTitle>Cuentas</PageTitle>

<div class="mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <i class="fas fa-piggy-bank text-primary fs-3 me-3"></i>
            <h3 class="mb-0 text-primary">Gestión de Cuentas</h3>
        </div>
        <div>
            <button class="btn btn-primary">
                Nueva Cuenta
            </button>
        </div>
    </div>
</div>

@if (accountsData == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
        <p>Cargando cuentas...</p>
    </div>
}
else if (!accountsData.Any())
{
    <div class="alert alert-info">No se encontraron cuentas!</div>
}
else
{
    <Grid TItem="AccountGetDto"
               Class="table table-hover table-bordered table-striped"
               Data="accountsData"
               AllowPaging="true"
               PageSize="5">

        <GridColumns>
            <GridColumn TItem="AccountGetDto" HeaderText="Número de Cuenta" PropertyName="AccountNumber" TextAlign="TextAlign.Center">
                @context.AccountNumber
            </GridColumn>

            <GridColumn TItem="AccountGetDto" HeaderText="Saldo" PropertyName="Balance">
                <span class="text-success fw-bold">@context.Balance.ToString("C")</span>
            </GridColumn>

            <GridColumn TItem="AccountGetDto" HeaderText="Nombre del Cliente" PropertyName="Client.Name">
                @context.Client.Name
            </GridColumn>

            <GridColumn TItem="AccountGetDto" HeaderText="Fecha de Creación" PropertyName="CreatedAt">
                @context.CreatedAt.ToString("dd/MM/yyyy")
            </GridColumn>

            <GridColumn TItem="AccountGetDto" HeaderText="Transacciones">
                <div class="d-flex align-items-center justify-content-center">
                    <button class="btn btn-sm btn-warning me-2" >
                         Crear
                    </button>
                    <button class="btn btn-sm btn-info">
                         Ver
                    </button>
                </div>
            </GridColumn>
        </GridColumns>
    </Grid>
}

@code {
    private IEnumerable<AccountGetDto>? accountsData;
    [Inject]
    private IRepository Repository { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var url = "/api/Account";
            accountsData = await Repository.GetAsync<List<AccountGetDto>>(url);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading accounts: {ex.Message}");
            accountsData = Enumerable.Empty<AccountGetDto>();
        }
    }

   
}